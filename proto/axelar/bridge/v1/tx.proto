syntax = "proto3";
package axelar.bridge.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/regen-network/regen-ledger/x/axelarbridge";

service Msg {
  // Records a bridged event and returns it's ID
  rpc RecordBridgeEvent(MsgRecordBridgeEvent)
      returns (MsgRecordBridgeEventResponse);

  // Queries and executes a recorded event. Once processed the event is removed.
  rpc ExecBridgeEvent(MsgExecBridgeEvent) returns (MsgExecBridgeEventResponse);

  // Sends a new event to the bridge servcie (chain)
  rpc SendBridgeEvent(MsgSendBridgeEvent) returns (MsgSendBridgeEventResponse);
}

message MsgRecordBridgeEvent {
  string axelar_account = 1; // Signer

  string sender_address = 2;
  string dest_address = 3;

  bytes payload = 4;
}

// MsgRecordBridgeEventResponse defines the Msg/SubmitProposal response type.
message MsgRecordBridgeEventResponse { uint64 event_id = 1; }

message MsgExecBridgeEvent {
  string executor = 1; // Signer
  uint64 event_id = 2;
}

// MsgExecBridgeEventResponse defines the Msg/ExecLegacyContent response type.
message MsgExecBridgeEventResponse {}

message MsgSendBridgeEvent {
  string sender = 1;
  string dest_address = 2;
  bytes payload = 3;
}

// MsgMsgSendBridgeEventResponse defines the Msg/ExecLegacyContent response
// type.
message MsgSendBridgeEventResponse {}
